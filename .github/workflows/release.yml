name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

env:
  BUILD_TARGETS: 'idk'

jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run tests
        if: matrix.goos == 'linux' && matrix.goarch == 'amd64'
        run: go test ./lib/...

      - name: Build binaries
        run: |
          for target in $BUILD_TARGETS; do
            ext=""
            if [ "${{ matrix.goos }}" = "windows" ]; then
              ext=".exe"
            fi
            GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ${target}-${{ matrix.goos }}-${{ matrix.goarch }}${ext} ./cmd/${target}
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.goos }}-${{ matrix.goarch }}
          path: '*-${{ matrix.goos }}-${{ matrix.goarch }}*'

  create-release:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: binaries-*
          merge-multiple: true

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: '*-*-*'
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
